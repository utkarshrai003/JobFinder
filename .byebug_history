c
json["body"]["job"]["id"]
json["body"]["job"].id
json
c
json["body"]["status"]
json["body"]
json[:body]
json
c
@applicant.job_applications.create(:job_id => @job.id)
@job
@applicant
@applicant.job_applications.create(:job_id => @job)
c
response.body
response
respponse
c
json["code"]
json
json[:code]
json
json.code
expect(json.code).to eq(1200)
json = JSON.parse(response.body)
response.meta
response.status
response.code
response.body
c
response.body
c
response.body
response
c
current_applicant
allow(controller).to receive(:current_applicant).and_return(@user)
allow(request.env['warden']).to receive(:authenticate_applicant!).and_return(@user)
allow(request.env['warden'])
user
current_applicant
current
allow(controller).to receive(:current_applicant).and_return(@user)
allow(request.env['warden']).to receive(:authenticate!).and_return(@user)
user = double(@user)
c
response.body
response
resonse
c
response.body
c
response.body
c
response.body
response
response'
resonse'
c
response.body
c
response.status
response.body
response
c
@user
c
response.body
response
c
response.body
response
resonse
c
self.departments
company.departments
self
c
@application.update(:status => params[:status])
c
@application
c
@application
c
params
c
current_recruiter.update(:name => params[:profilec][:name])
params[:profile][:name]
params[:profile[:name]
params[:profile]
c
params[:name]
current_recruiter.company
current_recruiter.name
current_recruiter.company.update(:name => params[:company]) if params[:company].present?
current_recruitercurrent_recruiter.update(:name => params[:name]) if params[:name].present?
current_recruiter.company.update(:name => params[:company]) if params[:company].present?
currentcurrent_recruiter.update(:name => params[:name]) if params[:name].present?
c
cc
params
c
update_params
e
c
job_application
c
job_application
c
job_application
c
job_application
c
job_application
c
job_application
c
job_application
c
job_application
C
EXIT
C
ApiException.new('UNAUTHORIZED_ACCESS')
c
ApiException.new
APiException.new
c
current_applicant.job_applications.include?
current_applicant.job_applications.include?(@job_application)
current_applicant.job_applications
c
params
c
params
c
Job.none
c
Jobs::Search.new.search(params[:search])
params[:search]
c
current_recruiter.role
c
Devise.mappings[""].failure_app
Devise.mappings[""].failureapp
Devise.mappings
env["warden.options"] 
env
env["warden.options"][:scope]
c
\q
Devise.mappings[:recruiter].scope
scope
scop
c
Devise.mappings[:recruiter].failure_app
Devise.mappings[:recruiter]
Devise.mappings
devise_mapping
Devise
c
Devise::Mapping[]
Devise::Mapping
Devise::Mappings
devise_mapping[:recruiter]
c
devise_mapping[scope.to_sym]
devise_mapping
scope.to_sym
c
scope.to_sym
exit
DeviseTokenAuth::RegistrationsController
render_create_error_bad_credentials
method(:render_create_success)
render_create_success
self.methods
self
c
@resource.role = 1
@resource.role = 'admin'
@resource.role = admin
@resource
